name: PR title = [#issue] issue-title

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  pull-requests: write
  issues: read

jobs:
  pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Extract issue number from branch
        id: extract
        run: |
          BRANCH="${{ github.head_ref }}"
          # feat/9-login → 9 추출
          ISSUE=$(echo "$BRANCH" | grep -oE '[0-9]+' | head -1 || true)
          echo "issue=$ISSUE" >> $GITHUB_OUTPUT

      - name: Stop if no issue number
        if: steps.extract.outputs.issue == ''
        run: echo "No issue number in branch. Skipping."

      - name: Fetch issue
        if: steps.extract.outputs.issue != ''
        id: fetch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = Number("${{ steps.extract.outputs.issue }}");
            const { owner, repo } = context.repo;
            try {
              const { data: issue } = await github.rest.issues.get({ owner, repo, issue_number: issueNumber });
              core.setOutput('title', issue.title);
              core.setOutput('number', issue.number.toString());
            } catch (e) {
              core.warning(`Issue #${issueNumber} not found: ${e.message}`);
            }

      - name: Update PR title only
        if: steps.fetch.outputs.title != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const issueNumber = "${{ steps.fetch.outputs.number }}";
            const issueTitle  = "${{ steps.fetch.outputs.title }}";
            const newTitle = `[#${issueNumber}] ${issueTitle}`;

            if (pr.title.trim() !== newTitle.trim()) {
              await github.rest.pulls.update({
                owner, repo, pull_number: pr.number,
                title: newTitle
              });
            }
